{"version":3,"sources":["webpack:///webpack/bootstrap 036499a7f4f7aea38bf8","webpack:///./src/index.js","webpack:///external \"botpress\"","webpack:///external \"botpress-version-manager\"","webpack:///./src/deamon.js","webpack:///external \"moment\"","webpack:///external \"bluebird\"","webpack:///external \"bluebird-retry\"","webpack:///external \"lodash\"","webpack:///./src/db.js"],"names":["db","knex","module","exports","init","bp","__dirname","get","then","_knex","ready","router","getRouter","req","res","next","listSchedules","broadcasts","rows","map","row","date_time","split","date","time","progress","total_count","sent_count","bool","parse","outboxed","type","content","text","errored","userTimezone","ts","id","filteringConditions","filters","JSON","send","put","body","timezone","addSchedule","post","updateSchedule","sendStatus","catch","err","status","message","delete","deleteSchedule","params","schedulingLock","sendingLock","INTERVAL_BASE","SCHEDULE_TO_OUTBOX_INTERVAL","SEND_BROADCAST_INTERVAL","emitChanged","throttle","events","emit","padDigits","number","digits","Array","Math","max","String","length","join","scheduleToOutbox","inFiveMinutes","add","toDate","endOfDay","upcomingFixedTime","isAfter","upcomingVariableTime","where","false","andWhere","whereNotNull","orWhere","whereNull","schedules","distinct","select","mapSeries","timezones","tz","initialTz","sign","Number","abs","relTime","schedule","adjustedTime","format","whereClause","isNil","sql","raw","scheduleId","count","update","true","logger","info","finally","_sendBroadcast","method","dropPromise","resolve","fnBody","filter","trim","test","fn","Function","userId","platform","some","values","v","warn","drop","debug","console","log","middlewares","sendOutgoing","to","user","sendBroadcasts","isPast","isBefore","now","limit","abort","max_tries","interval","backoff","scheduleUser","error","notifications","level","url","botpress","k","initialize","setInterval","Error","createTableIfNotExists","table","increments","primary","string","timestamp","boolean","integer","references","onDelete","dateTime","Date","created_on","stringify","insert","del"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;ACtCA;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,KAAIA,KAAK,IAAT;AACA,KAAIC,OAAO,IAAX;;AAEAC,QAAOC,OAAP,GAAiB;AACfC,SAAM,cAASC,EAAT,EAAa;AACjB,2CAAaA,EAAb,EAAiBC,SAAjB;AACA,2BAAOD,EAAP;AACAA,QAAGL,EAAH,CAAMO,GAAN,GACCC,IADD,CACM,iBAAS;AACbP,cAAOQ,KAAP;AACAT,YAAK,kBAAGC,IAAH,CAAL;AACD,MAJD;AAKD,IATc;AAUfS,UAAO,eAASL,EAAT,EAAa;;AAElB,SAAMM,SAASN,GAAGO,SAAH,CAAa,oBAAb,CAAf;;AAEAD,YAAOJ,GAAP,CAAW,aAAX,EAA0B,UAACM,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC5Cf,UAAGgB,aAAH,GACCR,IADD,CACM,gBAAQ;AACZ,aAAMS,aAAaC,KAAKC,GAAL,CAAS,eAAO;AAAA,sCACZC,IAAIC,SAAJ,CAAcC,KAAd,CAAoB,GAApB,CADY;AAAA;AAAA,eAC1BC,IAD0B;AAAA,eACpBC,IADoB;;AAGjC,eAAMC,WAAWL,IAAIM,WAAJ,GACbN,IAAIO,UAAJ,GAAiBP,IAAIM,WADR,GAEb,+BAAQzB,IAAR,EAAc2B,IAAd,CAAmBC,KAAnB,CAAyBT,IAAIU,QAA7B,IAAyC,CAAzC,GAA6C,CAFjD;;AAIA,kBAAO;AACLC,mBAAMX,IAAIW,IADL;AAELC,sBAASZ,IAAIa,IAFR;AAGLH,uBAAU,+BAAQ7B,IAAR,EAAc2B,IAAd,CAAmBC,KAAnB,CAAyBT,IAAIU,QAA7B,CAHL;AAILI,sBAAS,+BAAQjC,IAAR,EAAc2B,IAAd,CAAmBC,KAAnB,CAAyBT,IAAIc,OAA7B,CAJJ;AAKLT,uBAAUA,QALL;AAMLU,2BAAc,CAACf,IAAIgB,EANd;AAOLb,mBAAMA,IAPD;AAQLC,mBAAMA,IARD;AASLa,iBAAIjB,IAAIiB,EATH;AAULC,kCAAqBlB,IAAImB,OAAJ,IAAeC,KAAKX,KAAL,CAAWT,IAAImB,OAAf;AAV/B,YAAP;AAYD,UAnBkB,CAAnB;;AAqBAzB,aAAI2B,IAAJ,CAASxB,UAAT;AACD,QAxBD;AAyBD,MA1BD;;AA4BAN,YAAO+B,GAAP,CAAW,aAAX,EAA0B,UAAC7B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,uBACaF,IAAI8B,IADjB;AAAA,WACpCpB,IADoC,aACpCA,IADoC;AAAA,WAC9BC,IAD8B,aAC9BA,IAD8B;AAAA,WACxBoB,QADwB,aACxBA,QADwB;AAAA,WACdZ,OADc,aACdA,OADc;AAAA,WACLD,IADK,aACLA,IADK;AAAA,WACCQ,OADD,aACCA,OADD;;AAE5CvC,UAAG6C,WAAH,CAAe,EAAEtB,UAAF,EAAQC,UAAR,EAAcoB,kBAAd,EAAwBZ,gBAAxB,EAAiCD,UAAjC,EAAuCQ,gBAAvC,EAAf,EACC/B,IADD,CACM;AAAA,gBAAMM,IAAI2B,IAAJ,CAAS,EAAEJ,IAAIA,EAAN,EAAT,CAAN;AAAA,QADN;AAED,MAJD;;AAMA1B,YAAOmC,IAAP,CAAY,aAAZ,EAA2B,UAACjC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAAA,wBACgBF,IAAI8B,IADpB;AAAA,WACrCN,EADqC,cACrCA,EADqC;AAAA,WACjCd,IADiC,cACjCA,IADiC;AAAA,WAC3BC,IAD2B,cAC3BA,IAD2B;AAAA,WACrBoB,QADqB,cACrBA,QADqB;AAAA,WACXZ,OADW,cACXA,OADW;AAAA,WACFD,IADE,cACFA,IADE;AAAA,WACIQ,OADJ,cACIA,OADJ;;AAE7CvC,UAAG+C,cAAH,CAAkB,EAAEV,MAAF,EAAMd,UAAN,EAAYC,UAAZ,EAAkBoB,kBAAlB,EAA4BZ,gBAA5B,EAAqCD,UAArC,EAA2CQ,gBAA3C,EAAlB,EACC/B,IADD,CACM;AAAA,gBAAMM,IAAIkC,UAAJ,CAAe,GAAf,CAAN;AAAA,QADN,EAECC,KAFD,CAEO,UAACC,GAAD,EAAS;AACdpC,aAAIqC,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB,EAAEW,SAASF,IAAIE,OAAf,EAArB;AACD,QAJD;AAKD,MAPD;;AASAzC,YAAO0C,MAAP,CAAc,iBAAd,EAAiC,UAACxC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnDf,UAAGsD,cAAH,CAAkBzC,IAAI0C,MAAJ,CAAWlB,EAA7B,EACC7B,IADD,CACM,YAAM;AACVM,aAAIkC,UAAJ,CAAe,GAAf;AACD,QAHD,EAICC,KAJD,CAIO,UAACC,GAAD,EAAS;AACdpC,aAAIqC,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqB,EAAEW,SAASF,IAAIE,OAAf,EAArB;AACD,QAND;AAOD,MARD;AASD;AAlEc,EAAjB,C;;;;;;ACVA,sC;;;;;;ACAA,sD;;;;;;;;ACAA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,KAAInD,OAAO,IAAX;AACA,KAAII,KAAK,IAAT;;AAEA,KAAImD,iBAAiB,KAArB;AACA,KAAIC,cAAc,KAAlB;;AAEA,KAAMC,gBAAgB,KAAK,IAA3B;AACA,KAAMC,8BAA8BD,gBAAgB,CAApD;AACA,KAAME,0BAA0BF,gBAAgB,CAAhD;;AAEA,KAAMG,cAAc,iBAAEC,QAAF,CAAW,YAAM;AACnCzD,SAAMA,GAAG0D,MAAH,CAAUC,IAAV,CAAe,mBAAf,CAAN;AACD,EAFmB,EAEjB,IAFiB,CAApB;;AAIA,UAASC,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmC;AACjC,UAAOC,MAAMC,KAAKC,GAAL,CAASH,SAASI,OAAOL,MAAP,EAAeM,MAAxB,GAAiC,CAA1C,EAA6C,CAA7C,CAAN,EAAuDC,IAAvD,CAA4D,CAA5D,IAAiEP,MAAxE;AACD;;AAED,UAASQ,gBAAT,GAA4B;AAC1B,OAAI,CAACzE,IAAD,IAASuD,cAAb,EAA6B;AAC3B;AACD;;AAED,OAAMmB,gBAAgB,wBACnBC,GADmB,CACf,CADe,EACZ,SADY,EAEnBC,MAFmB,EAAtB;AAGA,OAAMC,WAAW,sBAAOH,aAAP,EACdC,GADc,CACV,EADU,EACN,OADM,EAEdC,MAFc,EAAjB;;AAIA,OAAME,oBAAoB,+BAAQ9E,IAAR,EAAcsB,IAAd,CAAmByD,OAAnB,CAA2BL,aAA3B,EAA0C,IAA1C,CAA1B;AACA,OAAMM,uBAAuB,+BAAQhF,IAAR,EAAcsB,IAAd,CAAmByD,OAAnB,CAA2BF,QAA3B,EAAqC,WAArC,CAA7B;;AAEAtB,oBAAiB,IAAjB;;AAEA,UAAOvD,KAAK,qBAAL,EACJiF,KADI,CACE;AACLpD,eAAU,+BAAQ7B,IAAR,EAAc2B,IAAd,CAAmBuD,KAAnB;AADL,IADF,EAIJC,QAJI,CAIK,YAAW;AACnB,UAAKF,KAAL,CAAW,YAAW;AACpB,YAAKG,YAAL,CAAkB,IAAlB,EAAwBD,QAAxB,CAAiCL,iBAAjC;AACD,MAFD,EAEGO,OAFH,CAEW,YAAW;AACpB,YAAKC,SAAL,CAAe,IAAf,EAAqBH,QAArB,CAA8BH,oBAA9B;AACD,MAJD;AAKD,IAVI,EAWJzE,IAXI,CAWC,qBAAa;AACjB,YAAO,mBAAQW,GAAR,CAAYqE,SAAZ,EAAuB,oBAAY;AACxC,cAAOvF,KAAK,OAAL,EACJwF,QADI,CACK,UADL,EAEJC,MAFI,GAGJlF,IAHI,CAGC,qBAAa;AACjB,gBAAO,mBAAQmF,SAAR,CAAkBC,SAAlB,EAA6B,gBAAsB;AAAA,eAATC,EAAS,QAAnBjD,QAAmB;;AACxD,eAAMkD,YAAYD,EAAlB;AACA,eAAME,OAAOC,OAAOH,EAAP,KAAc,CAAd,GAAkB,GAAlB,GAAwB,GAArC;AACAA,gBAAK5B,UAAUI,KAAK4B,GAAL,CAASD,OAAOH,EAAP,CAAT,CAAV,EAAgC,CAAhC,CAAL;AACA,eAAMK,UAAU,2BAAUC,SAAS9E,SAAnB,GAA+B0E,IAA/B,GAAsCF,EAAtC,EAA4C,mBAA5C,EAAiEhB,MAAjE,EAAhB;AACA,eAAMuB,eAAe,+BAAQnG,IAAR,EAAcsB,IAAd,CAAmB8E,MAAnB,CAA0BF,SAAS/D,EAAT,GAAc+D,SAAS/D,EAAvB,GAA4B8D,OAAtD,CAArB;;AAEA,eAAMI,cAAc,iBAAEC,KAAF,CAAQT,SAAR,IAAqB,wBAArB,GAAgD,6BAApE;;AAEA,eAAMU,8NAKJF,WALI,0BAAN;;AAQA,kBAAOrG,KACJwG,GADI,CACAD,GADA,EACK;AACRE,yBAAYP,SAAS9D,EADb;AAER+D,uCAFQ;AAGRN;AAHQ,YADL,EAMJtF,IANI,EAAP;AAOD,UAxBM,CAAP;AAyBD,QA7BI,EA8BJA,IA9BI,CA8BC,YAAM;AACV,gBAAOP,KAAK,kBAAL,EACJiF,KADI,CACE,EAAEwB,YAAYP,SAAS9D,EAAvB,EADF,EAEJqD,MAFI,CAEGzF,KAAKwG,GAAL,CAAS,mBAAT,CAFH,EAGJjG,IAHI,GAIJD,GAJI,CAIA,CAJA,EAKJC,IALI,CAKC,iBAAe;AAAA,eAAZmG,KAAY,SAAZA,KAAY;;AACnB,kBAAO1G,KAAK,qBAAL,EACJiF,KADI,CACE,EAAE7C,IAAI8D,SAAS9D,EAAf,EADF,EAEJuE,MAFI,CAEG;AACN9E,uBAAU,+BAAQ7B,IAAR,EAAc2B,IAAd,CAAmBiF,IAAnB,EADJ;AAENnF,0BAAaiF;AAFP,YAFH,EAMJnG,IANI,CAMC,YAAM;AACVH,gBAAGyG,MAAH,CAAUC,IAAV,CAAe,sCAAsCZ,SAAS9D,EAA9D,EAAkE,QAAQsE,KAAR,GAAgB,YAAlF;;AAEA,iBAAIR,SAAS5D,OAAT,IAAoBC,KAAKX,KAAL,CAAWsE,SAAS5D,OAApB,EAA6BiC,MAA7B,GAAsC,CAA9D,EAAiE;AAC/DnE,kBAAGyG,MAAH,CAAUC,IAAV,CACE,6CAA6CZ,SAAS9D,EADxD,EAEE,wCAFF;AAID;;AAEDwB;AACD,YAjBI,CAAP;AAkBD,UAxBI,CAAP;AAyBD,QAxDI,CAAP;AAyDD,MA1DM,CAAP;AA2DD,IAvEI,EAwEJmD,OAxEI,CAwEI,YAAM;AACbxD,sBAAiB,KAAjB;AACD,IA1EI,CAAP;AA2ED;;AAED,KAAMyD,iBAAiB,mBAAQC,MAAR,CAAe,eAAO;AAC3C,OAAIC,cAAc,mBAAQC,OAAR,CAAgB,KAAhB,CAAlB;;AAEA,OAAIhG,IAAImB,OAAR,EAAiB;AACf4E,mBAAc,mBAAQxB,SAAR,CAAkBnD,KAAKX,KAAL,CAAWT,IAAImB,OAAf,CAAlB,EAA2C,kBAAU;AACjE,WAAI8E,SAASC,OAAOC,IAAP,EAAb;AACA,WAAI,CAAC,YAAYC,IAAZ,CAAiBH,MAAjB,CAAL,EAA+B;AAC7BA,kBAAS,YAAYA,MAArB;AACD;;AAED,WAAMI,KAAK,IAAIC,QAAJ,CAAa,IAAb,EAAmB,QAAnB,EAA6B,UAA7B,EAAyCL,MAAzC,CAAX;AACA,cAAO,mBAAQH,MAAR,CAAeO,EAAf,EAAmBpH,EAAnB,EAAuBe,IAAIuG,MAA3B,EAAmCvG,IAAIwG,QAAvC,CAAP;AACD,MARa,EAQXpH,IARW,CAQN,kBAAU;AAChB,cAAO,iBAAEqH,IAAF,CAAOC,MAAP,EAAe,aAAK;AACzB,aAAIC,MAAM,IAAN,IAAcA,MAAM,KAAxB,EAA+B;AAC7B1H,cAAGyG,MAAH,CAAUkB,IAAV,CAAe,iDAAiD,4CAAhE;AACD;;AAED,gBAAO,OAAOD,CAAP,KAAa,WAAb,IAA4BA,MAAM,IAAlC,IAA0CA,MAAM,IAAvD;AACD,QANM,CAAP;AAOD,MAhBa,CAAd;AAiBD;;AAED,UAAOZ,YAAY3G,IAAZ,CAAiB,gBAAQ;AAC9B,SAAIyH,IAAJ,EAAU;AACR5H,UAAGyG,MAAH,CAAUoB,KAAV,CAAgB,+BAA+B9G,IAAIsF,UAAnC,GAAgD,YAAhD,GAA+DtF,IAAIuG,MAAnE,GAA4E,oBAA5F;AACA;AACD;;AAEDQ,aAAQC,GAAR,CAAYhH,GAAZ;AACA,SAAIA,IAAIW,IAAJ,KAAa,MAAjB,EAAyB;AACvB1B,UAAGgI,WAAH,CAAeC,YAAf,CAA4B;AAC1BV,mBAAUxG,IAAIwG,QADY;AAE1B7F,eAAM,MAFoB;AAG1BE,eAAMb,IAAIa,IAHgB;AAI1BwE,cAAK;AACH8B,eAAInH,IAAIuG,MADL;AAEHvE,oBAAShC,IAAIa;AAFV,UAJqB;AAQ1BuG,eAAM;AACJnG,eAAIjB,IAAIuG;AADJ;AARoB,QAA5B;AAYD,MAbD,MAaO;AACL,WAAMF,KAAK,IAAIC,QAAJ,CAAa,IAAb,EAAmB,QAAnB,EAA6B,UAA7B,EAAyCtG,IAAIa,IAA7C,CAAX;AACA,cAAOwF,GAAGpH,EAAH,EAAOe,IAAIuG,MAAX,EAAmBvG,IAAIwG,QAAvB,CAAP;AACD;AACF,IAxBM,CAAP;AAyBD,EAhDsB,CAAvB;;AAkDA,UAASa,cAAT,GAA0B;AACxB,OAAI,CAACxI,IAAD,IAASwD,WAAb,EAA0B;AACxB;AACD;;AAEDA,iBAAc,IAAd;;AAEA,OAAMiF,SAAS,+BAAQzI,IAAR,EAAcsB,IAAd,CAAmBoH,QAAnB,CAA4B1I,KAAKwG,GAAL,CAAS,yBAAT,CAA5B,EAAiE,+BAAQxG,IAAR,EAAcsB,IAAd,CAAmBqH,GAAnB,EAAjE,CAAf;;AAEA3I,QAAK,kBAAL,EACGiF,KADH,CACSwD,MADT,EAEGjE,IAFH,CAEQ,OAFR,EAEiB,UAFjB,EAE6B,yBAF7B,EAGGA,IAHH,CAGQ,qBAHR,EAG+B,YAH/B,EAG6C,wBAH7C,EAIGoE,KAJH,CAIS,IAJT,EAKGnD,MALH,CAKU,CACN,wBADM,EAEN,4BAFM,EAGN,kCAHM,EAIN,kCAJM,EAKN,sCALM,EAMN,wCANM,EAON,iCAPM,EAQN,yCARM,CALV,EAeGlF,IAfH,CAeQ,gBAAQ;AACZ,SAAIsI,QAAQ,KAAZ;AACA,YAAO,mBAAQnD,SAAR,CAAkBzE,IAAlB,EAAwB,eAAO;AACpC,WAAI4H,KAAJ,EAAW;AACT;AACD;AACD,cAAO,6BAAM;AAAA,gBAAM7B,eAAe7F,GAAf,CAAN;AAAA,QAAN,EAAiC;AACtC2H,oBAAW,CAD2B;AAEtCC,mBAAU,IAF4B;AAGtCC,kBAAS;AAH6B,QAAjC,EAKJzI,IALI,CAKC,YAAM;AACV,gBAAOP,KAAK,kBAAL,EACJiF,KADI,CACE,EAAEyC,QAAQvG,IAAI8H,YAAd,EAA4BxC,YAAYtF,IAAIsF,UAA5C,EADF,EAEJrD,MAFI,GAGJ7C,IAHI,CAGC,YAAM;AACV,kBAAOP,KAAK,qBAAL,EACJiF,KADI,CACE,EAAE7C,IAAIjB,IAAIsF,UAAV,EADF,EAEJE,MAFI,CAEG,EAAEjF,YAAY1B,KAAKwG,GAAL,CAAS,gBAAT,CAAd,EAFH,EAGJjG,IAHI,CAGC;AAAA,oBAAMqD,aAAN;AAAA,YAHD,CAAP;AAID,UARI,CAAP;AASD,QAfI,EAgBJZ,KAhBI,CAgBE,eAAO;AACZ6F,iBAAQ,IAAR;;AAEAzI,YAAGyG,MAAH,CAAUqC,KAAV,CACE,4BAA4B/H,IAAIsF,UAAhC,GAA6C,sCAA7C,GAAsFxD,IAAIE,OAD5F;;AAIA/C,YAAG+I,aAAH,CAAiB3G,IAAjB,CAAsB;AACpB4G,kBAAO,OADa;AAEpBjG,oBAAS,gBAAgBhC,IAAIsF,UAApB,GAAiC,UAAjC,GAA8C,wCAFnC;AAGpB4C,gBAAK;AAHe,UAAtB;;AAMA,gBAAOrJ,KAAK,qBAAL,EACJiF,KADI,CACE,EAAE7C,IAAIjB,IAAIsF,UAAV,EADF,EAEJE,MAFI,CAEG;AACN1E,oBAAS,+BAAQjC,IAAR,EAAc2B,IAAd,CAAmBiF,IAAnB;AADH,UAFH,EAKJrG,IALI,CAKC,YAAM;AACV,kBAAOP,KAAK,kBAAL,EACJiF,KADI,CACE,EAAEwB,YAAYtF,IAAIsF,UAAlB,EADF,EAEJrD,MAFI,GAGJ7C,IAHI,CAGC;AAAA,oBAAMqD,aAAN;AAAA,YAHD,CAAP;AAID,UAVI,CAAP;AAWD,QAxCI,CAAP;AAyCD,MA7CM,CAAP;AA8CD,IA/DH,EAgEGmD,OAhEH,CAgEW,YAAM;AACbvD,mBAAc,KAAd;AACD,IAlEH;AAmED;;AAEDvD,QAAOC,OAAP,GAAiB,oBAAY;AAC3BE,QAAKkJ,QAAL;;AAEAlJ,MAAGL,EAAH,CAAMO,GAAN,GAAYC,IAAZ,CAAiB,aAAK;AAAA,eACG,kBAAGgJ,CAAH,CADH;AAAA,SACZC,UADY,OACZA,UADY;;AAEpBxJ,YAAOuJ,CAAP;AACAC;AACD,IAJD;;AAMAC,eAAYhF,gBAAZ,EAA8Bf,2BAA9B;AACA+F,eAAYjB,cAAZ,EAA4B7E,uBAA5B;AACD,EAXD,C;;;;;;ACzPA,oC;;;;;;ACAA,sC;;;;;;ACAA,4C;;;;;;ACAA,oC;;;;;;;;ACAA;;AAEA;;;;;;AAEA,KAAI3D,OAAO,IAAX;;AAEA,UAASwJ,UAAT,GAAsB;AACpB,OAAI,CAACxJ,IAAL,EAAW;AACT,WAAM,IAAI0J,KAAJ,CAAU,yCAAV,CAAN;AACD;;AAED,UAAO,+BAAQ1J,IAAR,EAAc2J,sBAAd,CAAqC,qBAArC,EAA4D,UAAUC,KAAV,EAAiB;AAClFA,WAAMC,UAAN,CAAiB,IAAjB,EAAuBC,OAAvB;AACAF,WAAMG,MAAN,CAAa,WAAb;AACAH,WAAMI,SAAN,CAAgB,IAAhB;AACAJ,WAAMG,MAAN,CAAa,MAAb;AACAH,WAAMG,MAAN,CAAa,MAAb;AACAH,WAAMK,OAAN,CAAc,UAAd;AACAL,WAAMK,OAAN,CAAc,SAAd;AACAL,WAAMM,OAAN,CAAc,aAAd;AACAN,WAAMM,OAAN,CAAc,YAAd;AACAN,WAAMI,SAAN,CAAgB,YAAhB;AACAJ,WAAMG,MAAN,CAAa,SAAb;AACD,IAZM,EAaNxJ,IAbM,CAaD,YAAW;AACf,YAAO,+BAAQP,IAAR,EAAc2J,sBAAd,CAAqC,kBAArC,EAAyD,UAAUC,KAAV,EAAiB;AAC/EA,aAAMM,OAAN,CAAc,YAAd,EAA4BC,UAA5B,CAAuC,wBAAvC,EAAiEC,QAAjE,CAA0E,SAA1E;AACAR,aAAMG,MAAN,CAAa,QAAb,EAAuBI,UAAvB,CAAkC,UAAlC;AACAP,aAAME,OAAN,CAAc,CAAC,YAAD,EAAe,QAAf,CAAd;AACAF,aAAMI,SAAN,CAAgB,IAAhB;AACD,MALM,CAAP;AAMD,IApBM,CAAP;AAqBD;;AAED,UAASpH,WAAT,OAAuE;AAAA,OAAhDtB,IAAgD,QAAhDA,IAAgD;AAAA,OAA1CC,IAA0C,QAA1CA,IAA0C;AAAA,OAApCoB,QAAoC,QAApCA,QAAoC;AAAA,OAA1BZ,OAA0B,QAA1BA,OAA0B;AAAA,OAAjBD,IAAiB,QAAjBA,IAAiB;AAAA,OAAXQ,OAAW,QAAXA,OAAW;;AACrE,OAAI+H,WAAW/I,OAAO,GAAP,GAAaC,IAA5B;AACA,OAAIY,KAAK,IAAT;;AAEA,OAAIQ,QAAJ,EAAc;AACZR,UAAK,sBAAO,IAAImI,IAAJ,CAASD,WAAW,GAAX,GAAiB1H,QAA1B,CAAP,EAA4CiC,MAA5C,EAAL;AACD;;AAED,OAAMzD,MAAM;AACVC,gBAAWiJ,QADD;AAEVlI,SAAIA,KAAK,+BAAQnC,IAAR,EAAcsB,IAAd,CAAmB8E,MAAnB,CAA0BjE,EAA1B,CAAL,GAAqC,IAF/B;AAGVH,WAAMD,OAHI;AAIVD,WAAMA,IAJI;AAKVD,eAAU,KALA;AAMVI,cAAS,KANC;AAOVR,kBAAa,CAPH;AAQVC,iBAAY,CARF;AASV6I,iBAAY,+BAAQvK,IAAR,EAAcsB,IAAd,CAAmBqH,GAAnB,EATF;AAUVrG,cAASC,KAAKiI,SAAL,CAAelI,OAAf;AAVC,IAAZ;;AAaA,UAAOtC,KAAK,qBAAL,EACNyK,MADM,CACCtJ,GADD,EACM,IADN,EAENZ,IAFM,GAECD,GAFD,CAEK,CAFL,CAAP;AAGD;;AAED,UAASwC,cAAT,QAA8E;AAAA,OAApDV,EAAoD,SAApDA,EAAoD;AAAA,OAAhDd,IAAgD,SAAhDA,IAAgD;AAAA,OAA1CC,IAA0C,SAA1CA,IAA0C;AAAA,OAApCoB,QAAoC,SAApCA,QAAoC;AAAA,OAA1BZ,OAA0B,SAA1BA,OAA0B;AAAA,OAAjBD,IAAiB,SAAjBA,IAAiB;AAAA,OAAXQ,OAAW,SAAXA,OAAW;;AAC5E,OAAI+H,WAAW/I,OAAO,GAAP,GAAaC,IAA5B;AACA,OAAIY,KAAK,IAAT;AACA,OAAIQ,QAAJ,EAAc;AACZR,UAAK,sBAAO,IAAImI,IAAJ,CAASD,WAAW,GAAX,GAAiB1H,QAA1B,CAAP,EAA4CiC,MAA5C,EAAL;AACD;;AAED,OAAMzD,MAAM;AACVC,gBAAWiJ,QADD;AAEVlI,SAAI,+BAAQnC,IAAR,EAAcsB,IAAd,CAAmB8E,MAAnB,CAA0BjE,EAA1B,CAFM;AAGVH,WAAMD,OAHI;AAIVD,WAAMA,IAJI;AAKVQ,cAASC,KAAKiI,SAAL,CAAelI,OAAf;AALC,IAAZ;;AAQA,UAAOtC,KAAK,qBAAL,EACNiF,KADM,CACA;AACL7C,SAAIA,EADC;AAELP,eAAU,+BAAQ7B,IAAR,EAAc2B,IAAd,CAAmBuD,KAAnB;AAFL,IADA,EAKNyB,MALM,CAKCxF,GALD,EAMNZ,IANM,EAAP;AAOD;;AAED,UAAS8C,cAAT,CAAwBjB,EAAxB,EAA4B;AAC1B,UAAOpC,KAAK,qBAAL,EACNiF,KADM,CACA,EAAE7C,IAAIA,EAAN,EADA,EAENgB,MAFM,GAGN7C,IAHM,CAGD,YAAM;AACV,YAAOP,KAAK,kBAAL,EACNiF,KADM,CACA,EAAEwB,YAAYrE,EAAd,EADA,EAENsI,GAFM,GAGNnK,IAHM,CAGD;AAAA,cAAM,IAAN;AAAA,MAHC,CAAP;AAID,IARM,CAAP;AASD;;AAED,UAASQ,aAAT,GAAyB;AACvB,UAAOf,KAAK,qBAAL,EAA4BO,IAA5B,EAAP;AACD;;AAEDN,QAAOC,OAAP,GAAiB,UAACqJ,CAAD,EAAO;AACtBvJ,UAAOuJ,CAAP;AACA,UAAO,EAAEC,sBAAF,EAAc5G,wBAAd,EAA2BS,8BAA3B,EAA2CP,8BAA3C,EAA2D/B,4BAA3D,EAAP;AACD,EAHD,C","file":"node.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/slvn/Desktop/modules/botpress-broadcast\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 036499a7f4f7aea38bf8","import { DatabaseHelpers as helpers } from 'botpress'\nimport checkVersion from 'botpress-version-manager'\n\nimport deamon from './deamon'\nimport DB from './db'\nimport moment from 'moment'\n\nlet db = null\nlet knex = null\n\nmodule.exports = {\n  init: function(bp) {\n    checkVersion(bp, __dirname)\n    deamon(bp)\n    bp.db.get()\n    .then(_knex => {\n      knex = _knex\n      db = DB(knex)\n    })\n  },\n  ready: function(bp) {\n\n    const router = bp.getRouter('botpress-broadcast')\n\n    router.get('/broadcasts', (req, res, next) => {\n      db.listSchedules()\n      .then(rows => {\n        const broadcasts = rows.map(row => {\n          const [date, time] = row.date_time.split(' ')\n          \n          const progress = row.total_count\n            ? row.sent_count / row.total_count\n            : helpers(knex).bool.parse(row.outboxed) ? 1 : 0\n\n          return {\n            type: row.type,\n            content: row.text,\n            outboxed: helpers(knex).bool.parse(row.outboxed),\n            errored: helpers(knex).bool.parse(row.errored),\n            progress: progress,\n            userTimezone: !row.ts,\n            date: date,\n            time: time,\n            id: row.id,\n            filteringConditions: row.filters && JSON.parse(row.filters)\n          }\n        })\n\n        res.send(broadcasts)\n      })\n    })\n\n    router.put('/broadcasts', (req, res, next) => {\n      const { date, time, timezone, content, type, filters } = req.body\n      db.addSchedule({ date, time, timezone, content, type, filters })\n      .then(id => res.send({ id: id }))\n    })\n\n    router.post('/broadcasts', (req, res, next) => {\n      const { id, date, time, timezone, content, type, filters } = req.body\n      db.updateSchedule({ id, date, time, timezone, content, type, filters })\n      .then(() => res.sendStatus(200))\n      .catch((err) => {\n        res.status(500).send({ message: err.message })\n      })\n    })\n\n    router.delete('/broadcasts/:id', (req, res, next) => {\n      db.deleteSchedule(req.params.id)\n      .then(() => {\n        res.sendStatus(200)\n      })\n      .catch((err) => {\n        res.status(500).send({ message: err.message })\n      })\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"botpress\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botpress\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"botpress-version-manager\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"botpress-version-manager\"\n// module id = 3\n// module chunks = 0","import { DatabaseHelpers as helpers } from 'botpress'\n\nimport moment from 'moment'\nimport Promise from 'bluebird'\nimport retry from 'bluebird-retry'\nimport _ from 'lodash'\n\nimport DB from './db'\n\nlet knex = null\nlet bp = null\n\nlet schedulingLock = false\nlet sendingLock = false\n\nconst INTERVAL_BASE = 10 * 1000\nconst SCHEDULE_TO_OUTBOX_INTERVAL = INTERVAL_BASE * 1\nconst SEND_BROADCAST_INTERVAL = INTERVAL_BASE * 1\n\nconst emitChanged = _.throttle(() => {\n  bp && bp.events.emit('broadcast.changed')\n}, 1000)\n\nfunction padDigits(number, digits) {\n  return Array(Math.max(digits - String(number).length + 1, 0)).join(0) + number\n}\n\nfunction scheduleToOutbox() {\n  if (!knex || schedulingLock) {\n    return\n  }\n\n  const inFiveMinutes = moment()\n    .add(5, 'minutes')\n    .toDate()\n  const endOfDay = moment(inFiveMinutes)\n    .add(14, 'hours')\n    .toDate()\n\n  const upcomingFixedTime = helpers(knex).date.isAfter(inFiveMinutes, 'ts')\n  const upcomingVariableTime = helpers(knex).date.isAfter(endOfDay, 'date_time')\n\n  schedulingLock = true\n\n  return knex('broadcast_schedules')\n    .where({\n      outboxed: helpers(knex).bool.false()\n    })\n    .andWhere(function() {\n      this.where(function() {\n        this.whereNotNull('ts').andWhere(upcomingFixedTime)\n      }).orWhere(function() {\n        this.whereNull('ts').andWhere(upcomingVariableTime)\n      })\n    })\n    .then(schedules => {\n      return Promise.map(schedules, schedule => {\n        return knex('users')\n          .distinct('timezone')\n          .select()\n          .then(timezones => {\n            return Promise.mapSeries(timezones, ({ timezone: tz }) => {\n              const initialTz = tz\n              const sign = Number(tz) >= 0 ? '+' : '-'\n              tz = padDigits(Math.abs(Number(tz)), 2)\n              const relTime = moment(`${schedule.date_time}${sign}${tz}`, 'YYYY-MM-DD HH:mmZ').toDate()\n              const adjustedTime = helpers(knex).date.format(schedule.ts ? schedule.ts : relTime)\n\n              const whereClause = _.isNil(initialTz) ? 'where timezone IS NULL' : 'where timezone = :initialTz'\n\n              const sql = `insert into broadcast_outbox (\"userId\", \"scheduleId\", \"ts\")\n            select userId, :scheduleId, :adjustedTime\n            from (\n              select id as userId\n              from users\n              ${whereClause}\n            ) as q1`\n\n              return knex\n                .raw(sql, {\n                  scheduleId: schedule.id,\n                  adjustedTime,\n                  initialTz\n                })\n                .then()\n            })\n          })\n          .then(() => {\n            return knex('broadcast_outbox')\n              .where({ scheduleId: schedule.id })\n              .select(knex.raw('count(*) as count'))\n              .then()\n              .get(0)\n              .then(({ count }) => {\n                return knex('broadcast_schedules')\n                  .where({ id: schedule.id })\n                  .update({\n                    outboxed: helpers(knex).bool.true(),\n                    total_count: count\n                  })\n                  .then(() => {\n                    bp.logger.info('[broadcast] Scheduled broadcast #' + schedule.id, '. [' + count + ' messages]')\n\n                    if (schedule.filters && JSON.parse(schedule.filters).length > 0) {\n                      bp.logger.info(\n                        '[broadcast] Filters found on broadcast #' + schedule.id,\n                        '. Filters are applied at sending time.'\n                      )\n                    }\n\n                    emitChanged()\n                  })\n              })\n          })\n      })\n    })\n    .finally(() => {\n      schedulingLock = false\n    })\n}\n\nconst _sendBroadcast = Promise.method(row => {\n  var dropPromise = Promise.resolve(false)\n\n  if (row.filters) {\n    dropPromise = Promise.mapSeries(JSON.parse(row.filters), filter => {\n      let fnBody = filter.trim()\n      if (!/^return /i.test(fnBody)) {\n        fnBody = 'return ' + fnBody\n      }\n\n      const fn = new Function('bp', 'userId', 'platform', fnBody)\n      return Promise.method(fn)(bp, row.userId, row.platform)\n    }).then(values => {\n      return _.some(values, v => {\n        if (v !== true && v !== false) {\n          bp.logger.warn('[broadcast] Filter returned something other ' + 'than a boolean (or a Promise of a boolean)')\n        }\n\n        return typeof v !== 'undefined' && v !== null && v !== true\n      })\n    })\n  }\n\n  return dropPromise.then(drop => {\n    if (drop) {\n      bp.logger.debug('[broadcast] Drop sending #' + row.scheduleId + ' to user: ' + row.userId + '. Reason = Filters')\n      return\n    }\n\n    console.log(row)\n    if (row.type === 'text') {\n      bp.middlewares.sendOutgoing({\n        platform: row.platform,\n        type: 'text',\n        text: row.text,\n        raw: {\n          to: row.userId,\n          message: row.text\n        },\n        user: {\n          id: row.userId\n        }\n      })\n    } else {\n      const fn = new Function('bp', 'userId', 'platform', row.text)\n      return fn(bp, row.userId, row.platform)\n    }\n  })\n})\n\nfunction sendBroadcasts() {\n  if (!knex || sendingLock) {\n    return\n  }\n\n  sendingLock = true\n\n  const isPast = helpers(knex).date.isBefore(knex.raw('\"broadcast_outbox\".\"ts\"'), helpers(knex).date.now())\n\n  knex('broadcast_outbox')\n    .where(isPast)\n    .join('users', 'users.id', 'broadcast_outbox.userId')\n    .join('broadcast_schedules', 'scheduleId', 'broadcast_schedules.id')\n    .limit(1000)\n    .select([\n      'users.userId as userId',\n      'users.platform as platform',\n      'broadcast_schedules.text as text',\n      'broadcast_schedules.type as type',\n      'broadcast_schedules.id as scheduleId',\n      'broadcast_schedules.filters as filters',\n      'broadcast_outbox.ts as sendTime',\n      'broadcast_outbox.userId as scheduleUser'\n    ])\n    .then(rows => {\n      let abort = false\n      return Promise.mapSeries(rows, row => {\n        if (abort) {\n          return\n        }\n        return retry(() => _sendBroadcast(row), {\n          max_tries: 3,\n          interval: 1000,\n          backoff: 3\n        })\n          .then(() => {\n            return knex('broadcast_outbox')\n              .where({ userId: row.scheduleUser, scheduleId: row.scheduleId })\n              .delete()\n              .then(() => {\n                return knex('broadcast_schedules')\n                  .where({ id: row.scheduleId })\n                  .update({ sent_count: knex.raw('sent_count + 1') })\n                  .then(() => emitChanged())\n              })\n          })\n          .catch(err => {\n            abort = true\n\n            bp.logger.error(\n              '[broadcast] Broadcast #' + row.scheduleId + ' failed. Broadcast aborted. Reason: ' + err.message\n            )\n\n            bp.notifications.send({\n              level: 'error',\n              message: 'Broadcast #' + row.scheduleId + ' failed.' + ' Please check logs for the reason why.',\n              url: '/logs'\n            })\n\n            return knex('broadcast_schedules')\n              .where({ id: row.scheduleId })\n              .update({\n                errored: helpers(knex).bool.true()\n              })\n              .then(() => {\n                return knex('broadcast_outbox')\n                  .where({ scheduleId: row.scheduleId })\n                  .delete()\n                  .then(() => emitChanged())\n              })\n          })\n      })\n    })\n    .finally(() => {\n      sendingLock = false\n    })\n}\n\nmodule.exports = botpress => {\n  bp = botpress\n\n  bp.db.get().then(k => {\n    const { initialize } = DB(k)\n    knex = k\n    initialize()\n  })\n\n  setInterval(scheduleToOutbox, SCHEDULE_TO_OUTBOX_INTERVAL)\n  setInterval(sendBroadcasts, SEND_BROADCAST_INTERVAL)\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/deamon.js","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 5\n// module chunks = 0","module.exports = require(\"bluebird\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 6\n// module chunks = 0","module.exports = require(\"bluebird-retry\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird-retry\"\n// module id = 7\n// module chunks = 0","module.exports = require(\"lodash\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash\"\n// module id = 8\n// module chunks = 0","import { DatabaseHelpers as helpers } from 'botpress'\n\nimport moment from 'moment'\n\nvar knex = null\n\nfunction initialize() {\n  if (!knex) {\n    throw new Error('you must initialize the database before')\n  }\n\n  return helpers(knex).createTableIfNotExists('broadcast_schedules', function (table) {\n    table.increments('id').primary()\n    table.string('date_time')\n    table.timestamp('ts')\n    table.string('text')\n    table.string('type')\n    table.boolean('outboxed')\n    table.boolean('errored')\n    table.integer('total_count')\n    table.integer('sent_count')\n    table.timestamp('created_on')\n    table.string('filters')\n  })\n  .then(function() {\n    return helpers(knex).createTableIfNotExists('broadcast_outbox', function (table) {\n      table.integer('scheduleId').references('broadcast_schedules.id').onDelete('CASCADE')\n      table.string('userId').references('users.id')\n      table.primary(['scheduleId', 'userId'])\n      table.timestamp('ts')\n    })\n  })\n}\n\nfunction addSchedule({ date, time, timezone, content, type, filters }) {\n  let dateTime = date + ' ' + time\n  let ts = null\n\n  if (timezone) {\n    ts = moment(new Date(dateTime + ' ' + timezone)).toDate()\n  }\n\n  const row = {\n    date_time: dateTime,\n    ts: ts ? helpers(knex).date.format(ts) : null,\n    text: content,\n    type: type,\n    outboxed: false,\n    errored: false,\n    total_count: 0,\n    sent_count: 0,\n    created_on: helpers(knex).date.now(),\n    filters: JSON.stringify(filters)\n  }\n\n  return knex('broadcast_schedules')\n  .insert(row, 'id')\n  .then().get(0)\n}\n\nfunction updateSchedule({ id, date, time, timezone, content, type, filters }) {\n  let dateTime = date + ' ' + time\n  let ts = null\n  if (timezone) {\n    ts = moment(new Date(dateTime + ' ' + timezone)).toDate()\n  }\n\n  const row = {\n    date_time: dateTime,\n    ts: helpers(knex).date.format(ts),\n    text: content,\n    type: type,\n    filters: JSON.stringify(filters)\n  }\n\n  return knex('broadcast_schedules')\n  .where({\n    id: id,\n    outboxed: helpers(knex).bool.false()\n  })\n  .update(row)\n  .then()\n}\n\nfunction deleteSchedule(id) {\n  return knex('broadcast_schedules')\n  .where({ id: id })\n  .delete()\n  .then(() => {\n    return knex('broadcast_outbox')\n    .where({ scheduleId: id })\n    .del()\n    .then(() => true)\n  })\n}\n\nfunction listSchedules() {\n  return knex('broadcast_schedules').then()\n}\n\nmodule.exports = (k) => {\n  knex = k\n  return { initialize, addSchedule, deleteSchedule, updateSchedule, listSchedules }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/db.js"],"sourceRoot":""}