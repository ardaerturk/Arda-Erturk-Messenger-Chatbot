module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _bluebird = __webpack_require__(2);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var CircularJSON = __webpack_require__(3);
	
	module.exports = {
	  init: function init(bp) {},
	  ready: function ready(bp) {
	
	    bp.getRouter('botpress-terminal').post('/run', function (req, res) {
	      var code = req.body && req.body.code;
	
	      if (!code) {
	        return res.status(500).send({ message: 'You must provide the `code` to run in the body' });
	      }
	
	      var fromDate = new Date();
	
	      var handleResult = function handleResult(success) {
	        return function (result) {
	          bp.logger.query({
	            from: fromDate,
	            until: new Date(),
	            order: 'asc',
	            fields: ['level', 'message', 'timestamp']
	          }, function (err, results) {
	            if (!success) {
	              res.status(500);
	            }
	
	            res.send({
	              logs: results.file,
	              result: success ? CircularJSON.stringify(result) : null,
	              message: success ? null : result.message
	            });
	          });
	        };
	      };
	
	      var fn = new Function('bp', 'knex', code);
	      bp.db.get().then(function (knex) {
	        _bluebird2.default.method(fn).call(null, bp, knex).then(handleResult(true)).catch(handleResult(false));
	      });
	    });
	  }
	};

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = require("bluebird");

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = require("circular-json");

/***/ }
/******/ ]);
//# sourceMappingURL=node.bundle.js.map